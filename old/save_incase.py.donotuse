
# elif action in ["take", "get"]:
#     if not arg:
#         print("What do you want to take?")
#     else:
#         try:
#             if current_room.inventory.has_component(arg):
#                 item = handle_inventory_operation(current_room.remove_item, arg)
#                 handle_inventory_operation(hero.inventory.add_item, item)
#                 print(f"You took the {arg}.")
#             else:
#                 print(f"There is no {arg} here to take.")
#         except Exception as e:
#             print(f"Failed to take item: {e}")
# elif action == "drop":
#     if not arg:
#         print("What do you want to drop?")
#     else:
#         try:
#             if hero.inventory.has_component(arg):
#                 quantity = 1  # Default to dropping 1
#                 # Remove from hero's inventory
#                 dropped_item = handle_inventory_operation(hero.inventory.remove_item, arg,quantity)
#                 # Add to room
#                 handle_inventory_operation(current_room.add_item, dropped_item)
#                 print(f"You dropped the {dropped_item.name} with quantity {dropped_item.quantity} in the {current_room.name}.")
#             else:
#                 print(f"You don't have a {arg} to drop.")
#         except Exception as e:
#             print(f"Failed to drop item: {e}")
#
#
# elif action == "examine":
#     if not arg:
#         print("What do you want to examine?")
#     else:
#         # Check hero's inventory first
#         if hero.inventory.has_component(arg):
#             item = hero.inventory[arg]
#             print(f"You examine the {item.name}:")
#             print(f"  Quantity: {item.quantity}")
#             print(f"  Value: {item.cost} gold")
#             if item.is_usable:
#                 effect_desc = "No effect"
#                 if item.effect_type.name == "HEAL":
#                     effect_desc = f"Heals for {item.effect_value} health"
#                 elif item.effect_type.name == "DAMAGE":
#                     effect_desc = f"Deals {item.effect_value} damage"
#                 print(f"  Effect: {effect_desc}")
#         # Then check room inventory
#         elif current_room.inventory.has_component(arg):
#             item = current_room.inventory[arg]
#             print(f"You examine the {item.name}:")
#             print(f"  Quantity: {item.quantity}")
#             print(f"  It looks like it's worth about {item.cost} gold.")
#             if item.is_usable:
#                 print("  It looks like you could use this item.")
#         else:
#             print(f"You don't see a {arg} here.")
#
# elif action == "use":
# use_command(arg, hero, current_room)